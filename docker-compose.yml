services:
  database:
    restart: always
    image: postgres:alpine
    volumes: 
      - postgres_data:/var/lib/postgresql/data
    env_file: 
      - ./.env.dev

  redis:
    restart: always
    image: redis:alpine

  web:
    restart: always
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes: 
      - ./:/usr/src/app
    ports:
      - 8000:8000
    env_file: 
      - ./.env.dev
    depends_on: 
      - database
      - redis

  celery:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A helios worker -l INFO
    volumes: 
      - ./:/usr/src/app
    env_file: 
      - ./.env.dev
    depends_on: 
      - database
      - redis

  nginx:
    image: nginx:alpine
    volumes: 
      - ./:/usr/src/app
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/certs:/etc/nginx/certs
    ports:
      - 80:80
      - 443:443
    depends_on: 
      - web

volumes:
  postgres_data: